% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothcholCV.R
\name{smoothcholCV}
\alias{smoothcholCV}
\title{Title}
\usage{
smoothcholCV(k = 5, X, both.lambda = FALSE, lambda1_seq = NULL,
  lambda2_seq = NULL, max_iter = 50, init.x = NULL, band = NULL,
  n_lambda = 60, pen.type = c("HP", "fused", "l1trend"),
  ABSTOL = 0.001, stand = FALSE)
}
\arguments{
\item{k}{Number of folds}

\item{X}{Data}

\item{both.lambda}{Logical type variable,If both.lambda is true perform crossvalidation, first for lambda2, keeping lambda1 constant and then for lambda1 kepping lambda2 value constant at the value found in the previous step.}

\item{lambda1_seq}{Sequence for lambda1 values.}

\item{lambda2_seq}{Sequence for lambda2 values.}

\item{max_iter}{Maximum number of iteration.}

\item{init.x}{Initial value for vectorized version of matrix L.}

\item{band}{Number of band to estimate, if NULL estimated entire lower triangular matrix L.}

\item{n_lambda}{If lambda1_seq(lambda2_seq) is NULL, creates sequence for lambdas with given length n_lambda.}

\item{pen.type}{Type of penalty.}

\item{ABSTOL}{Tolerence for the algorithm convergence.}

\item{stand}{If TRUE, data transformes into standardard version.}
}
\description{
Title
}
\examples{
 
  X = matrix(rnorm(500), nrow = 50, ncol = 10) 
  L.cv = smoothcholCV( k = 5, lambda2_seq = NULL, n_lambda = 60, pen.type = c("fused"))$L_fit


}
